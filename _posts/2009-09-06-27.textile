---
title: GitHub Rebase 27
layout: post
---

"Rebaaaaaaaaaaaaaaaase.":http://www.youtube.com/watch?v=rTK0kFXJjd0

p=. !http://cloud.github.com/downloads/rebase/rebase.github.com/cheeze.jpg!

h3. Featured Project

"redis":http://github.com/antirez/redis/tree/master is a key-value store that just hit 1.0.0. So what? It's ridiculously fast, can handle sets and lists along with strings as values, and it can asynchronously dump its data, supports sharding on the client side, and plenty more that wouldn't fit here. It's easier to think of it as a data structures server, or a "REmote DIctionary Server". The code is all here on GitHub if you're a C hacker, and its API is well documented as well. (Did I mention we're using here on GitHub too?) Bindings are already available in Ruby, Java, Python, Perl, and more so you can play around with it today.

h3. Notably New Projects

"clevercss":http://github.com/Poromenos/clevercss/tree/master is a much less verbose version of CSS that's Python backed. This means, of course, it obeys the normal Python indentation rules, which ends up being a good thing. Unlike HAML, it tries hard to still look like normal CSS, but it does allow some magic like pseudo-class shortcuts, grouping shortcuts, constants, and even some basic @Color@ and @String@ methods if you're feeling daring. If you're a Pythonista and want write CSS easier, definitely give this a look.

"TeXorator":http://github.com/ianh/TeXorator/tree/master is a LaTeX viewer that auto-refreshes the document it's looking at when changes are made. All you need is OSX and LaTeX installed, and you should be set. It also shows errors that may occur during the document's generation. This definitely seems like a fun and useful project to hack on, and seeing the idea ported to other operating systems would be neat as well.

"spde-examples":http://github.com/n8han/spde-examples combines two fantastic projects of the Java world: Scala and Processing. Well technically, "Spde":http://technically.us/spde/About does the hard stuff, but this repo contains some seriously cool examples of how it can look. You could check out an example applet "here":http://technically.us/spde/Fold, but you'll be better served by cloning and running it yourself.

"philip-rss":http://github.com/philipn/philip-rss/tree/master is the first RSS reader that I can personally stand to use, mostly because it's integrated deeply into Firefox. The workflow is simple: click Firefox's built in RSS reader button to subscribe, and then a new RSS icon button in your lower right hand corner gives you a nifty view of your feeds. The UI here is minimalist in a good way: it's simple and doesn't get in your way. Check out a more visual tutorial and how to install it "here":http://mathburritos.org/code/philip-rss/.
